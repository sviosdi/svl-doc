"use strict";(self.webpackChunksvl_doc=self.webpackChunksvl_doc||[]).push([[556],{1746:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"start","metadata":{"permalink":"/svl-doc/blog/start","source":"@site/blog/2022-12-16/index.md","title":"Lancement","description":"Signaux&Slots","date":"2022-12-16T00:00:00.000Z","formattedDate":"16 d\xe9cembre 2022","tags":[{"label":"sl","permalink":"/svl-doc/blog/tags/sl"},{"label":"signal","permalink":"/svl-doc/blog/tags/signal"},{"label":"slot","permalink":"/svl-doc/blog/tags/slot"}],"hasTruncateMarker":false,"authors":[{"name":"sviosdi","title":"Bricoleur C++","url":"https://gitlab.com/sviosdi","imageURL":"/svl-doc/img/logo_svl.svg","key":"sviosdi"}],"frontMatter":{"slug":"start","title":"Lancement","authors":["sviosdi"],"tags":["sl","signal","slot"]}},"content":"![Signaux&Slots](/img/sig.webp)\\nPremier post de la documentation du code en C++. Il concerne les signaux et les slots.\\nAucune librairie tierce n\'est n\xe9cessaire. Seule la _stl_ est utilis\xe9e.\\n\\nLe m\xe9canisme de signaux et de slots permet de connecter un `signal` (qui est une fonction un peu particuli\xe8re) \xe0 un `slot` qui est une fonction globale ou une m\xe9thode d\'une classe, mais ayant les m\xeames param\xe8tres que le signal. \xc0 chaque `\xe9mission` du signal (qui correspond \xe0 l\'appel de la fonction signal avec ses param\xe8tres s\'il y en a) le slot connect\xe9 est effectu\xe9 avec les param\xe8tres transmis par le signal."}]}')}}]);